//
// @siimple/lib - core scss library for siimple
// Under the MIT LICENSE.
// License:    https://github.com/siimple/siimple/blob/develop/LICENSE.md
// Repository: https://github.com/siimple/siimple
// Website:    https://www.siimple.xyz
//

@use "./variables.scss" as variables;
@use "./functions.scss" as functions;
@use "./utils.scss" as utils;

//Set text selection
//Mixin by @icetee (PR #5) and edited by @dyzajash (PR #11)
@mixin user-select ($select: "none") {
    -webkit-user-select: $select;
    -khtml-user-select: $select;
    -moz-user-select: $select;
    -ms-user-select: $select;
}

//Alias for disabling user selection
@mixin disable-select () {
    @include user-select("none");
}

//Clear floated content
@mixin clearfix () {
    &::after {
        display: block;
        content: "";
        clear: both;
    }
}

//Truncate the text
//$overflow: clip, ellipsis, or a string
@mixin truncate-text ($overflow: "ellipsis") {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: $overflow;
}

//Striped background
@mixin striped-bg ($first-bg: transparent, $second-bg: transparent) {
    background: repeating-linear-gradient(
        45deg,
        $first-bg,
        $first-bg  7px,
        $second-bg 7px,
        $second-bg 12px
    );
}

//Fluid content size
@mixin content-fluid () {
    width: calc(100% - #{2 * variables.$content-gap});
    padding-left: variables.$content-gap;
    padding-right: variables.$content-gap;
}

//Sizing mixin
@mixin content-size ($size: 0px) {
    //Check for string size
    @if utils.is-string($size) == true {
        $size: functions.content($size); //Get the content size
    }
    //Apply the provided size only in screen widts > $size
    @media screen and (min-width: $size) {
        width: $size - 2 * variables.$content-gap;
        padding-left: calc(50% - #{$size - 2 * variables.$content-gap} / 2);
        padding-right: calc(50% - #{$size - 2 * variables.$content-gap} / 2);
    }
}

